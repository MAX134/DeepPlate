# Model Training Summary

## General Information
The model was trained using the YOLO framework with the following configuration:
- **Task**: Object Detection
- **Model**: YOLO (yolo11n.pt)
- **Dataset**: COCO8
- **Epochs**: 100
- **Batch Size**: 16
- **Image Size**: 640x640
- **Device**: MPS (Metal Performance Shaders)

## Training Results
The training process generated the following key results:
- **Final Model**: Saved as `last.pt` in the `weights/` directory.
- **Metrics**:
    - **Precision**: Improved steadily, reaching a maximum of ~0.00367.
    - **Recall**: Peaked at 0.66667 during early epochs.
    - **mAP@50**: Reached a maximum of 0.28376.
    - **mAP@50-95**: Reached a maximum of 0.13616.

## Loss Trends
- **Box Loss**: Decreased significantly over epochs, indicating better localization.
- **Classification Loss**: Reduced steadily, showing improved classification accuracy.
- **DFL Loss**: Gradually decreased, reflecting better distribution-focused learning.

## Visualizations
- **Confusion Matrices**: `confusion_matrix.png` and `confusion_matrix_normalized.png` provide insights into class-wise performance.
- **Curves**:
    - `F1_curve.png`: Shows the F1-score progression.
    - `P_curve.png`: Precision curve.
    - `R_curve.png`: Recall curve.
    - `PR_curve.png`: Precision-Recall curve.

## Training Batches
- Sample training images are available (`train_batch0.jpg`, `train_batch1.jpg`, etc.), showing the model's predictions during training.

## Validation Results
- Validation images (`val_batch0_labels.jpg`, `val_batch0_pred.jpg`) demonstrate the model's performance on unseen data.

## Observations
- The model shows steady improvement in metrics over epochs.
- The mAP values suggest room for improvement in detection accuracy.
- The training process was well-documented with visualizations and logs.

## Next Steps
- Fine-tune the model to improve mAP and precision.
- Experiment with different hyperparameters or augmentations.
- Test the model on real-world data to evaluate its generalization.
